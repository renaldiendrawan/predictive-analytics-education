# -*- coding: utf-8 -*-
"""sentiment_analysis_notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zq9HjXXoGa_pP5Dpq6DfLj11qrzTGqnB

# Proyek Machine Learning - Analisis Performa Akademik Siswa
Notebook ini dibuat untuk memprediksi kelulusan siswa berdasarkan fitur demografis dan sosial, serta memahami fitur mana yang paling berpengaruh terhadap performa akademik siswa. Dataset diambil dari Kaggle: [Students Performance](https://www.kaggle.com/datasets/spscientist/students-performance-in-exams)

## Domain Proyek
Masalah dalam dunia pendidikan adalah bagaimana memanfaatkan data untuk meningkatkan hasil belajar. Tujuan proyek ini adalah untuk membantu pihak pendidikan memahami karakteristik siswa yang berpengaruh terhadap kelulusan dan performa akademik.

## Business Understanding
### Problem Statements
1. Bagaimana cara memprediksi apakah seorang siswa akan lulus mata pelajaran matematika, membaca, dan menulis?
2. Fitur demografis dan sosial apa yang paling memengaruhi performa akademik siswa?

### Goals
1. Mengembangkan model klasifikasi untuk memprediksi kelulusan siswa pada tiga mata pelajaran utama.
2. Mengidentifikasi fitur-fitur yang paling memengaruhi nilai siswa dengan pendekatan regresi.

### Solution Statements
- Menggunakan Logistic Regression untuk klasifikasi kelulusan siswa.
- Menggunakan Linear Regression untuk prediksi nilai dan pentingnya fitur.
- Evaluasi menggunakan metrik yang sesuai seperti Accuracy dan RMSE.

## Data Understanding
Sumber data: [Kaggle - Students Performance](https://www.kaggle.com/datasets/spscientist/students-performance-in-exams)

- Jumlah data: 1000 baris, 8 kolom
- Tidak ada missing values atau duplikat
- Fitur:
  - gender
  - race/ethnicity
  - parental level of education
  - lunch
  - test preparation course
  - math score, reading score, writing score
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv("StudentsPerformance.csv")
df.head()

"""### Visualisasi Distribusi Fitur Numerikal"""

numeric_cols = ['math score', 'reading score', 'writing score']
df[numeric_cols].hist(bins=20, figsize=(10, 5))
plt.tight_layout()
plt.show()

"""### Visualisasi Fitur Kategorikal"""

categorical_cols = ['gender', 'race/ethnicity', 'parental level of education', 'lunch', 'test preparation course']
for col in categorical_cols:
    sns.countplot(y=col, data=df)
    plt.title(f'Distribusi {col}')
    plt.show()

"""## Data Preparation
- Label encoding pada kolom kategorikal
- Menambahkan kolom target kelulusan (nilai >= 65 dianggap lulus)
- Membagi data menjadi train-test set
"""

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

# Buat label kelulusan
df['math_pass'] = (df['math score'] >= 65).astype(int)
df['reading_pass'] = (df['reading score'] >= 65).astype(int)
df['writing_pass'] = (df['writing score'] >= 65).astype(int)

df_encoded = pd.get_dummies(df.drop(columns=['math score', 'reading score', 'writing score']))

X = df_encoded.drop(columns=['math_pass', 'reading_pass', 'writing_pass'])
y_math = df_encoded['math_pass']
X_train, X_test, y_train, y_test = train_test_split(X, y_math, test_size=0.2, random_state=42)

"""## Modeling
### Logistic Regression (Klasifikasi)
Memprediksi apakah siswa lulus berdasarkan fitur input.

### Linear Regression (Regresi)
Untuk mengetahui fitur yang paling mempengaruhi nilai akhir siswa.
"""

from sklearn.linear_model import LogisticRegression, LinearRegression

# Logistic Regression
log_reg = LogisticRegression(max_iter=1000)
log_reg.fit(X_train, y_train)
y_pred = log_reg.predict(X_test)

# Linear Regression
y_score = df['math score']
X_train_reg, X_test_reg, y_train_reg, y_test_reg = train_test_split(X, y_score, test_size=0.2, random_state=42)
lin_reg = LinearRegression()
lin_reg.fit(X_train_reg, y_train_reg)
y_pred_reg = lin_reg.predict(X_test_reg)

"""## Evaluation
### Klasifikasi
Metrik: Accuracy, Precision, Recall, F1-score

### Regresi
Metrik: RMSE
"""

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, mean_squared_error
from math import sqrt

print("=== Classification ===")
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Precision:", precision_score(y_test, y_pred))
print("Recall:", recall_score(y_test, y_pred))
print("F1 Score:", f1_score(y_test, y_pred))

print("\n=== Regression ===")
rmse = sqrt(mean_squared_error(y_test_reg, y_pred_reg))
print("RMSE:", rmse)